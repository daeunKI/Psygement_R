%!TEX TS-program = xelatex
%!TEX encoding = UTF-8 Unicode

\input{../template_lecture.Rnw}
\begin{document}
\SweaveOpts{concordance=TRUE, keep.source=TRUE}
<<echo=FALSE>>=
options(width=60)
load("~/FSA/AB/dlm_data.RData")
@

\title{제12강: 칼만필터링}
\subtitle{금융 통계 및 시계열 분석}
\author{TRADE INFORMATIX}
\date{2014년 2월 18일}
\maketitle

\begin{frame}[fragile]
\frametitle{목차}
\tableofcontents
\end{frame}


\section{통계적 추정 문제(Statistical Inference Problem)}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{통계적 추정 문제(Statistical Inference Problem)}
  \begin{itemize}
    \item 주어진 data $X$에서 모형 파라미터 $\theta$를 찾아낸다
  \end{itemize}
  \begin{enumerate}
    \item 기존의 추정 방법론 (Batch estimation)
    \begin{itemize}
      \item $X$만을 사용하여 파라미터 $\theta$ 추정
      \item MLE (Maximum Likelihood Estimation)
      \begin{itemize}
        \item Batch estimation의 방법 중 하나
        \item likelihood를 최대화하는 $\theta$를 찾는 최적화 문제
      \end{itemize}
    \end{itemize}
    \item 베이지안 추정 (Bayesian estimation)
    \begin{itemize}
      \item a prior 파라미터 분포 $P(\theta)$와 $X$을 사용하여 파라미터 분포 $P(\theta|X)$ 추정
      \item 파라미터 분포에 대한 가정이 필요
      \item Bayesain Rule에 의해 a prior 분포를 a posterior 분포로 변화
    \end{itemize}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{베이지안 추정}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 추정 (Bayeisan Estimation)} 
  \begin{itemize}
    \item 베이지안 추정 방법론에서는 \\
          추정할 파라미터가 결정론적으로 정해진 값(deterministic value)이 아니라
          확률분포로 기술되기 때문에 그 {\bf 파라미터의 분포를 찾아야 한다}고 가정한다.
    \item 결정론적 추정 방법론 :
      \begin{eqnarray*}
        y \sim N(\mu, 1)
      \end{eqnarray*}
      의 샘플데이터 $\{ y_i \}$로부터 $\mu$값을 추정 (point estimation)
    \item 베이지안 추정 방법론 :
      \begin{eqnarray*}
        y \sim N(\mu, 1), \;\; \mu \sim N(m, C)
      \end{eqnarray*}
      의 샘플데이터 $\{ y_i \}$로부터 $\mu$의 분포 파라미터 $m$와 $C$를 추정
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 추정의 예 1}
  \begin{itemize}
    \item Normal-Normal 문제
    \begin{itemize}
      \item 샘플 분포가 Normal 분포이고 그 Normal 분포의 평균값도 Normal 분포
      \item 샘플 분포의 분산은 주어짐
      \begin{eqnarray*}
        P(x|\mu) &=& N(\mu, \sigma^2) \\
        P(\mu | \mu_0, \sigma_0^2) &=& N(\mu_0, \sigma_0^2)
      \end{eqnarray*}
    \end{itemize}
    \item Normal-InverseGamma 문제
    \begin{itemize}
      \item 샘플 분포가 Normal 분포
      \item Normal 분포의 평균값은 Normal 분포
      \item Normal 분포의 분산은 Inverse-Gamma 분포
      \begin{eqnarray*}
        P(x|\mu) &=& N(\mu, \sigma^2) \\
        P(\mu | \mu_0, \tau^2) &=& N(\mu_0, \tau^2) \\
        P(\sigma^2 | a, b) &=& \text{InverseGamma}(a, b)
      \end{eqnarray*}
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 추정의 예 2}
  \begin{itemize}
    \item Gamma-Poisson 문제
    \begin{itemize}
      \item 샘플 분포가 Poisson 분포이고 그 Poisson 분포의 파라미터는 Gamma 분포
      \begin{eqnarray*}
        P(x|\mu) &=& \text{Poisson}(\lambda) \\
        P(\lambda | \alpha, \beta) &=& \text{Gamma}(\mu_0, \sigma_0^2)
      \end{eqnarray*}
    \end{itemize}
    \item Beta-Binomial 문제
    \begin{itemize}
      \item 샘플 분포가 Binomial 분포
      \item Binomial 분포의 성공확률 $p$은 Beta 분포
      \begin{eqnarray*}
        P(x|p) &=& \text{Binom}(p) \\
        P(p|\alpha, \beta) &=& \text{Beta}(\alpha, \beta)
      \end{eqnarray*}
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 법칙}
  \begin{itemize}
    \item 베이지안 추정 방법론에서는 \\
          샘플 데이터가 추가될 때마다 그 데이터와 베이지안 법칙을 이용하여 \\
          지금까지 구한 파라미터 분포를 갱신(update)한다.
    \item 베이지안 법칙 (Baysian Rule) :
      \begin{eqnarray*}
        P(A|B) =  \dfrac{P(A \cap B)}{P(B)}
      \end{eqnarray*}
      \begin{itemize}
        \item $P(A)$ : 사건 A가 발생할 확률
        \item $P(B)$ : 사건 B가 발생할 확률
        \item $P(A \cap B)$ : 사건 A가 사건 B가 동시에 발생할 확률
        \item $P(A|B)$ : 사건B가 이미 발생했을때 A가 또 발생할 확률
      \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 법칙의 예}
  \begin{tcolorbox}[boxsep=2mm,title=정적 통계 분석]
    \begin{itemize}
      \item 어떤 희귀질병에 걸릴 확률 : 0.1\%
      \item 감염이 되었을 경우 시약검사 결과가 양성일 확률 : 99\%
      \item 감염이 되지 않았음에도 시약검사 결과가 양성일 확률 : 2\%
      \item 어떤 환자의 검사결과가 양성으로 나왔을 경우 실제로 감염되었을 확률은?
    \end{itemize}
  \end{tcolorbox}
  \begin{itemize}
    \item 질병 감염 확률 : $P(D) = 0.001$
    \item True Alarm 확률 : $P(T|D) = 0.99$
    \item False Alarm 확률 : $P(T|D^C) = 0.02$
    \item 검사결과가 양성일때 실제로 감염되었을 확률
      \begin{eqnarray*}
        P(D|T) &=& \dfrac{P(D \cap T)}{P(T)} = \dfrac{P(T|D)P(D)}{P(T)} 
          = \dfrac{P(T|D)P(D)}{P(T|D)T(D)+P(T|D^C)T(D^C)} \\
          &=& \dfrac{0.99 \times 0.001)}{ 0.99 \times 0.001 + 0.02 \times 0.999}
          = 0.047 = 4.7\% 
      \end{eqnarray*}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 분포 추정} 
  \begin{itemize}
    \item 베이지안방법을 이용한 파라미터/상태변수 분포 추정
      \begin{eqnarray*}
        \pi(\theta | y) 
          &=& \dfrac{\pi(y \cap \theta)}{\pi(y)} \\
          &=& \dfrac{\pi(y | \theta) \pi(\theta)}{\pi(y)} \\
          &=& \dfrac{\pi(y | \theta) \pi(\theta)}{\int \pi(y|\theta)\pi(\theta)d\theta} \\
        \text{updated distribution under $y$}
          &=& \dfrac{\text{likelihood} \times \text{a prior distribution}}{\text{marginal distribution}}
      \end{eqnarray*}
    \begin{itemize}
      \item updated distribution : 새로운 샘플 $y$을 이용하여 갱신된 파라미터 분포 추정치
      \item likelihood : 특정한 파라미터 하에서 그 샘플값이 나올 가능성
      \item a prior distribution : 지금까지 알고 있던 파라미터 분포 추정치 
      \item marginal distribution : 샘플 $y$값이 나올 무조건부(unconditional) 분포
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

\subsection{마코프 체인}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{마코프 체인 (Markov Chain)}
  \begin{itemize}
    \item 어떤 확률적 시계열 $y_t \; (t=1, 2, \ldots, t)$의 
          조건부 확률분포 $\pi(y_t | y_1, \cdots, y_{t-1})$가 
          한 스텝전의 과거에만 의존하는 경우 
          {\bf 마코프 체인(Markov Chain)}이라고 한다.
    \begin{eqnarray*}
      \pi(y_t | y_1, \cdots, y_{t-1}) = \pi(y_t | y_{t-1})
    \end{eqnarray*}
    \item 마코프 체인(Markov Chain)의 결합확률분포(joint distribution)는 
          다음과 같은 형태로 표현가능
    \begin{eqnarray*}
      \pi(y_1, \cdots, y_t) = \pi(y_1) \prod_{j=2}^t \pi(y_j | y_{j-1})
    \end{eqnarray*}
  \end{itemize}
\end{frame}
%===============================================================================

\subsection{상태공간 모형}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{상태공간 모형 (State Space Model)}
  \begin{itemize}
    \item ARMA 시계열 모형에서는 관측할 수 있는 출력값 $x$자체의 결합확률분포
          (joint density distribution)을 정의하여 시계열 정보의 변화를 기술
      \begin{eqnarray*}
        \pi(x_t | x_1, \ldots, x_{t-1}) 
          = \dfrac{\pi(x_1, \ldots, x_t)}{\pi(x_1, \ldots, x_{t-1})}
      \end{eqnarray*}
    \item {\bf 상태공간 모형}에서는 보이지 않은 상태변수(state) $\theta$의 
          결합확률분포를 정의하여 시계열 정보의 변화를 기술
      \begin{eqnarray*}
        \pi(\theta_t | \theta_1, \ldots, \theta_{t-1}) 
          = \dfrac{\pi(\theta_1, \ldots, \theta_t)}{\pi(\theta_1, \ldots, \theta_{t-1})}
      \end{eqnarray*}
    \item 상태공간 모형에서 사람이 관측할 수 있는 것은 상태변수 $\theta$ 자체가 
          아닌 상태변수에 의존하는 출력(measurements) $y$ 라고 가정. 이 때
          상태공간 모형에서 상태변수 $\theta$와 출력 $y$의 관계는 다음과 같은 
          추가적인 조건부 확률분포에 의해 정의됨
      \begin{eqnarray*}
        \pi(y_t | \theta_t)
      \end{eqnarray*}
    \item 상태변수는 베이지안 추정방법에서 추정하려는 파라미터에 해당
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{조건부 독립성 (Conditional Independence)}
  \begin{itemize}
    \item 상태공간 모형을 정의하기 위해서는 다음 조건이 필요
    \begin{enumerate}
      \item 상태변수가 마코프 체인
      \item 출력$y$는 조건부 독립 : $\theta$에 조건부로 서로 독립적이고 $\theta$에만 의존
        \begin{eqnarray*}
          \pi(y_1, \ldots, y_t | \theta) =
            \prod_{i=1}^n \pi(y_i | \theta) 
        \end{eqnarray*}
    \end{enumerate}
    \item 상태변수와 출력의 전체 분포는 
      \begin{itemize}
        \item 최초의 상태변수 분포 $\pi(\theta_0)$와 
        \item 조건부 분포 $\pi(\theta_i | \theta_{i-1})$, $\pi(y_i | \theta_i) $
      \end{itemize}
      만으로 기술 가능
      \begin{eqnarray*}
        \pi(\theta_0, \ldots, \theta_t, y_1, \ldots, y_t) =
          \pi(\theta_0) \prod_{i=1}^n \pi(\theta_i | \theta_{i-1}) \pi(y_i | \theta_i) 
      \end{eqnarray*}
  \end{itemize}
\end{frame}
%===============================================================================

\section{베이지안 필터링}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{필터링(Filtering), 스무딩(Smoothing), 예측(Forecasting)}
  \begin{itemize}
    \item 필터링
    \begin{itemize}
      \item 최신 상태변수의 최신 업데이트 분포 $\pi(\theta_t | y_1, \ldots, y_t)$ 계산
    \end{itemize}
    \item 스무딩
    \begin{itemize}
      \item 과거 상태변수의 최신 업데이트 분포 $\pi(\theta_t | y_1, \ldots, y_T)$ 계산
    \end{itemize}
    \item 예측
    \begin{itemize}
      \item 미래 상태변수의 최신 업데이트 분포 $\pi(\theta_{t+k} | y_1, \ldots, y_t)$ 계산
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

\subsection{회귀 필터링}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 회귀 필터링 (Bayesian Recursive Filtering)}
  \begin{enumerate}
    \item 초기 파라미터 분포
    \begin{eqnarray*}
      \theta_0 \sim N(m_0, C_0)
    \end{eqnarray*}
    \item 1-스텝 파라미터 예측
    \begin{eqnarray*}
      \pi(\theta_t | y_1, \ldots, y_{t-1}) = 
        \int \pi(\theta_t|\theta_{t-1})\pi(\theta_{t-1}|y_1, \ldots, y_{t-1}) d\theta_{t-1}
    \end{eqnarray*}
    \item 1-스텝 출력 예측
    \begin{eqnarray*}
      \pi(y_t | y_1, \ldots, y_{t-1}) = 
        \int \pi(y_t|\theta_t)\pi(\theta_t|y_1, \ldots, y_{t-1}) d\theta_t
    \end{eqnarray*}
    \item 파라미터 추정
    \begin{eqnarray*}
      \pi(\theta_t | t_1, \ldots, y_t) = 
        \dfrac{\pi(y_t|\theta_t)\pi(\theta_t|y_1, \ldots, y_{t-1})}%
              {\pi(y_t|y_1, \ldots, y_{t-1})}
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{회귀 스무딩}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 회귀 스무딩 (Bayesian Recursive Smoothing)}
  \begin{enumerate}
    \item 1-스텝 과거 파라미터 추정
    \begin{eqnarray*}
      \pi(\theta_t | \theta_{t+1}, y_1, \ldots, y_{t-1}) = 
        \dfrac{\pi(\theta_{t+1}|\theta_t)\pi(\theta_t|y_1, \ldots, y_t)}%
              {\pi(\theta_{t+1}|y_1, \ldots, y_t)}
    \end{eqnarray*}
    \item 스무딩
    \begin{eqnarray*}
      \pi(\theta_t | y_1, \ldots, y_T) = 
        \pi(\theta_t|y_1, \ldots, y_t) \int 
          \dfrac{\pi(\theta_{t+1}|\theta_t)}%
                {\pi(\theta_{t+1}|y_1, \ldots, y_t)}
          \pi(\theta_{t+1} | y_1, \ldots, y_T) d\theta_{t+1}
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{회귀 예측}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{베이지안 회귀 예측 (Bayesian Recursive Forecasting)}
  \begin{enumerate}
    \item k-스텝 파라미터 예측
    \begin{eqnarray*}
      \pi(\theta_{t+k} | y_1, \ldots, y_{t-1}) = 
        \int \pi(\theta_{t+k}|\theta_{t+k-1})\pi(\theta_{t+k-1}|y_1, \ldots, y_t) d\theta_{t+k-1}
    \end{eqnarray*}
    \item k-스텝 출력 예측
    \begin{eqnarray*}
      \pi(y_{t+k} | y_1, \ldots, y_t) = 
        \int \pi(y_{t+k}|\theta_{t+k})\pi(\theta_{t+k}|y_1, \ldots, y_t) d\theta_{t+k}
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{칼만 필터}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{칼만필터 모형 가정}
  \begin{itemize}
    \item 초기 파라미터 분포
    \begin{eqnarray*}
      \theta_0 \sim N(m_0, C_0)
    \end{eqnarray*}
    \item 다이나믹스 
    \begin{eqnarray*}
      \theta_t &=& G_t \theta_{t-1} + w_t 
    \end{eqnarray*}
    \item 출력관계
    \begin{eqnarray*}
      Y_t      &=& F_t \theta_t + v_t 
    \end{eqnarray*}
    \begin{itemize}
      \item $\theta_t$ : 시간 $t$에서의 파라미터의 기대값 벡터 ($p \times 1$)
      \item $m_0$ : 시간 $0$에서의 초기 파라미터 분포의 기대값 벡터 ($p \times 1$)
      \item $C_0$ : 시간 $0$에서의 초기 파라미터 분포의 공분산 행렬 ($p \times p$)
      \item $G_t$ : 시간 $t$에서의 다이나믹스 행렬 ($p \times p$)
      \item $w_t \sim N(0, W_t)$ : 시간 $t$에서의 이노베이션 ($p \times 1$)
      \item $Y_t$ : 시간 $t$에서의 출력값 벡터 ($m \times 1$)
      \item $F_t$ : 시간 $t$에서의 출력 행렬 ($m \times p$)
      \item $v_t \sim N(0, V_t)$ : 시간 $t$에서의 출력 잡음 ($m \times 1$)
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{칼만 필터링, 칼만 스무딩, 칼만 예측}
  \begin{itemize}
    \item 칼만 필터링
    \begin{itemize}
      \item 최신 상태변수의 최신 추정치 $m_t = E(\theta_t | y_1, \ldots, y_t)$ 계산
    \end{itemize}
    \item 칼만 스무딩
    \begin{itemize}
      \item 과거 상태변수의 최신 추정치 $s_t = E(\theta_t | y_1, \ldots, y_T)$ 계산
    \end{itemize}
    \item 칼만 예측
    \begin{itemize}
      \item 미래 상태변수의 최신 추정치 $f_{t+k} = E(\theta_{t+k} | y_1, \ldots, y_t)$ 계산
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

\subsection{칼만 필터링}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{칼만 필터링 (Kalman Filtering)}
  \begin{enumerate}
    \item 초기 파라미터 분포
    \begin{eqnarray*}
      \pi(\theta_{t-1}|y_1, \ldots, y_{t-1}) \sim N(m_{t-1}, C_{t-1})
    \end{eqnarray*}
    \item 1-스텝 파라미터 예측
    \begin{eqnarray*}
      a_t &=& E(\theta_t | y_1, \ldots, y_{t-1}) =  G_t m_{t-1} \\
      R_t &=& \text{Var}(\theta_t | y_1, \ldots, y_{t-1}) =  G_t C_{t-1} G_t^T + W_t 
    \end{eqnarray*}
    \item 1-스텝 출력 예측
    \begin{eqnarray*}
      f_t &=& E(y_t | y_1, \ldots, y_{t-1}) =  F_t a_t \\
      Q_t &=& \text{Var}(y_t | y_1, \ldots, y_{t-1}) =  F_t R_t F_t^T + V_t 
    \end{eqnarray*}
    \item 파라미터 추정
    \begin{eqnarray*}
      m_t &=& E(\theta_t | y_1, \ldots, y_t) = a_t + R_t F_t^T Q_t^{-1} (y_t - f_t) \\
      C_t &=& \text{Var}(\theta_t | y_1, \ldots, y_t) =  R_t - R_t F_t^T Q_t^{-1} F_t R_t
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{칼만 스무딩}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{칼만 스무딩 (Kalman Smoothing)}
  \begin{enumerate}
    \item 초기 파라미터 분포
    \begin{eqnarray*}
      \pi(\theta_t|y_1, \ldots, y_T) \sim N(s_t, S_t)
    \end{eqnarray*}
    \item 스무딩
    \begin{eqnarray*}
      s_t &=& m_t + C_t G_{t+1}^T R_{t+1}^{-1} (s_{t+1} - a_{t+1}) \\
      S_t &=& C_t - C_t G_{t+1}^T R_{t+1}^{-1}(R_{t+1} - S_{t+1}) R_{t+1}^{-1} G_{t+1} C_t
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{칼만 예측}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{칼만 예측 (Kalman Forecasting)}
  \begin{enumerate}
    \item k-스텝 파라미터 예측
    \begin{eqnarray*}
      a_t(k) &=& G_{t+k} a_{t-1, k-1} \\
      R_t(k) &=& G_{t+k} R_t G_{t+k}^T + W_{t+k}
    \end{eqnarray*}
    \item k-스텝 출력 예측
    \begin{eqnarray*}
      f_t(k) &=& F_{t+k} a_t(k) \\
      Q_t(k) &=& F_{t+k} R_t(k) F_{t+k}^T + V_t 
    \end{eqnarray*}
  \end{enumerate}
\end{frame}
%===============================================================================

\subsection{R 칼만 필터링 명령}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{R에서 칼만 필터링, 스무딩, 예측}
  \begin{itemize}
    \item dlm 패키지 사용
    \item 모델 생성 : {\tt dlm(m0, C0, FF, V, GG, W)}
    \begin{itemize}
      \item {\tt m0} : $\theta$의 초기 분포의 기대값  $m_0$
      \item {\tt C0} : $\theta$의 초기 분포의 분산  $C_0$
      \item {\tt FF, GG} : 출력 행렬 및 다이나믹스 행렬
      \item {\tt V, W} : 출력잡음 및 이노베이션 분산 
      \item 실제로는 {\tt dlmModXXX} 함수를 사용
    \end{itemize}
    \item 필터링 : {\tt dlmFilter(y, mod)}
    \begin{itemize}
      \item {\tt y} : 데이터 벡터
      \item {\tt mod} : {\tt dlm} 등으로 생성한 모델 오브젝트
    \end{itemize}
    \item 스무딩 : {\tt dlmSmooth(y, mod)}
    \begin{itemize}
      \item {\tt y} : 데이터 벡터
      \item {\tt mod} : {\tt dlm} 등으로 생성한 모델 오브젝트
    \end{itemize}
    \item 예측 : {\tt dlmForecast(mod, nAhead)}
    \begin{itemize}
      \item {\tt mod} : {\tt dlmFilter} 등으로 생성한 필터링 결과
      \item {\tt nAhead} : 예측 스텝수
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Convenience Models}
  \begin{itemize}
    \item 실제로는 {\tt dlm} 명령을 이용하여 직접 행렬을 입력하기 보다는
          다음과 같은 모델생성 명령어를 사용
    \item 모형은 {\tt +} 기호를 이용하여 조합(state augmentation) 가능
    \begin{itemize}
      \item {\tt dlmModPoly} : 다항식 모형
      \item {\tt dlmModARMA} : ARMA 모형
      \item {\tt dlmModReg} : 회귀분석 모형
      \item {\tt dlmModSeas} : 계절성 모형
      \item {\tt dlmModTrig} : 주파수 모형
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model}
  \begin{itemize}
    \item 다항식(polynomial)을 이용한 추세(trend) 모형
    \begin{eqnarray*}
      E(y_{t+k}|y_1, \ldots, y_t) = a_{t,0} + a_{t,1} k + \cdots + a_{t,n-1} k^{n-1}
    \end{eqnarray*}
    \begin{itemize}
      \item $n=1$ : local level model
      \item $n=2$ : linear growth model
    \end{itemize}
    \item {\tt dlmModPoly(order, dV, dW, m0, C0)}
    \begin{itemize}
      \item {\tt order} : 다항식 모델의 차수
      \item {\tt dV} : 관측잡음의 분산행렬
      \item {\tt dW} : 이노베이션 분산행렬
      \item {\tt m0} : 상태변수 초기 평균벡터
      \item {\tt C0} : 상태변수 초기 분산행렬
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Local Level Model}
  \begin{itemize}
    \item Local Level Model : 다항식 모델에서 $n=1$
    \item Random Walk plus Noise, Steady Model, ARIMA(0,1,1)
    \begin{eqnarray*}
      Y_t   &=& \mu_t + v_t       \; , \;\;\; v_t \sim N(0, V) \\
      \mu_t &=& \mu_{t-1} + w_t   \; , \;\;\; w_t \sim N(0, W) 
    \end{eqnarray*}    
    \begin{eqnarray*}
      E(y_{t+k}|y_1, \ldots, y_t) &=    & m_t \\
        y_{t+k}|y_1, \ldots, y_t  &\sim & N(m_t, Q_t(k)) \\
      Q_t(k)                      &=    & C_t + W_t + V
    \end{eqnarray*}    
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Filtering}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
require(dlm, quietly=TRUE)
plot(Nile, type='o', col= "darkgrey", xlab="", ylab="Level")
mod1 <- dlmModPoly(order=1, dV=15100, dW=755)
mod2 <- dlmModPoly(order=1, dV=15100, dW=7550)
NileFilt1 <- dlmFilter(Nile, mod1)
NileFilt2 <- dlmFilter(Nile, mod2) 
lines(dropFirst(NileFilt1$m), lty="longdash", col="blue")
lines(dropFirst(NileFilt2$m), lty="dotdash", col="red")
leg <- c("data", 
         paste("filtered, W/V =", 
               format(c(W(mod1)/V(mod1), W(mod2)/V(mod2)))))
legend("bottomright", legend=leg, bty = "n",
       col=c("darkgrey", "blue", "red"), 
       lty=c("solid", "longdash", "dotdash"), 
       pch=c(1, NA, NA))
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Filtering}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Smoothing}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
mod <- dlmModPoly(order=1, dV=15100, dW=1468)
NileFilt <- dlmFilter(Nile, mod)
NileSmooth <- dlmSmooth(NileFilt) 
hwid <- qnorm(0.025, lower=FALSE) * 2 + 
  sqrt(unlist(dlmSvd2var(NileSmooth$U.S, NileSmooth$D.S))) 
smooth <- cbind(NileSmooth$s, 
                as.vector(NileSmooth$s) + hwid %o% c(-1, 1)) 
plot(dropFirst(smooth), plot.type="s", type="l", 
     lty=c(1, 5, 5), ylab="Level", xlab="", 
     col=c("red", "blue", "blue"),
     ylim=range(Nile))
lines(Nile, type="o", col="darkgrey") 
legend("bottomleft", col=c("darkgrey", "red", "blue"), 
       lty=c(1, 1, 5), pch=c(1, NA, NA), bty="n", 
       legend=c("data", "smoothed level", "95% probability limits"))
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Smoothing}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Forecasting}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
a <- window(cbind(Nile, NileFilt1$f, NileFilt2$f), 
            start=1880, end=1920) 
plot(a[, 1], type='o', col="darkgrey", 
     xlab="", ylab="Level")
lines(a[, 2], lty="longdash", col="blue") 
lines(a[, 3], lty="dotdash", col="red")
leg <- c("data",
         paste("one-step-ahead forecast, W/V =",
               format(c(W(mod1) / V(mod1), + W(mod2) / V(mod2)))))
legend("bottomleft", legend=leg, 
       col = c("darkgrey", "blue", "red"), 
       lty = c("solid", "longdash", "dotdash"), 
       pch = c(1, NA, NA), bty = "n")
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Forecasting}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Forecasting}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
a <- window(cbind(Nile, NileFilt1$f, NileFilt2$f), 
            start=1880, end=1920) 
plot(a[, 1], type='o', col="darkgrey", 
     xlab="", ylab="Level")
lines(a[, 2], lty="longdash", col="blue") 
lines(a[, 3], lty="dotdash", col="red")
leg <- c("data",
         paste("one-step-ahead forecast, W/V =",
               format(c(W(mod1) / V(mod1), + W(mod2) / V(mod2)))))
legend("bottomleft", legend=leg, 
       col = c("darkgrey", "blue", "red"), 
       lty = c("solid", "longdash", "dotdash"), 
       pch = c(1, NA, NA), bty = "n")
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Linear Growth Model}
  \begin{itemize}
    \item Linear Growth Model : 다항식 모델에서 $n=2$
    \item ARIMA(0,2,2)
    \begin{eqnarray*}
      Y_t     &=& \mu_t + v_t                       \; , \;\;\; v_t \sim N(0, V)        \\
      \mu_t   &=& \mu_{t-1} + \beta_{t-1} + w_{t,1} \; , \;\;\; w_{t,1} \sim N(0, W_1)  \\
      \beta_t &=& \beta_{t-1} + w_{t,2}             \; , \;\;\; w_{t,2} \sim N(0, W_2)
    \end{eqnarray*}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Linear Growth Model}
  \begin{tcolorbox}\small
<<fig,fig=FALSE,results=hide>>=
invSpain <- ts(read.table("~/FSA/AB/Datasets/invest2.dat", 
                          colClasses = "numeric")[,2], start = 1960)
mod1 <- dlmModPoly(dV = 10, dW = c(102236, 321803))
mod1Filt <- dlmFilter(invSpain, mod1)
fut1 <- dlmForecast(mod1Filt, n=5)
mod2 <- dlmModPoly(dV = 10, dW = c(0, 515939))
mod2Filt <- dlmFilter(invSpain, mod2)
fut2 <- dlmForecast(mod2Filt, n=5)
par(mar=c(2,3,1,0) + 0.1, cex=0.7)
plot(invSpain, xlim=c(1960, 2005), ylim=c(2500, 22000),
     xlab="", ylab="Investments", type='o', col = "darkgrey")
lines(dropFirst(mod1Filt$f), type='o', lty="431313", pch=3)
lines(dropFirst(mod2Filt$f), type='o', lty="22848222", pch=4)
lines(fut1$f, lty="dashed")
lines(fut2$f, lty="dotted")
legend("topleft", bty = "n",
       legend=c("observed", "one-step-ahead forecast - model 1",
                "one-step-ahead forecast - model 2", 
                "5 years forecast - model 1",
                "5 years forecast - model 2"),
       lty=c("solid", "431313", "22848222", "dashed", "dotted"), 
       pch=c(1,3,4,-1,-1),
       col=c("darkgrey", rep("black", 4)), inset = 0.05)
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Forecasting}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{ARMA Model}
  \begin{itemize}
    \item ARMA 모형
    \begin{eqnarray*}
      y_k = \sum_{j=1}^p \phi_j y_{t-j} + \sum_{j=1}^q \psi_j e_{t-j}
    \end{eqnarray*}
    \item {\tt dlmModARMA(ar, ma, sigma2, dV, m0, C0)}
    \begin{itemize}
      \item {\tt ar} : AR 계수
      \item {\tt ma} : MA 계수
      \item {\tt sigma2} : 이노베이션 분산
      \item {\tt dV} : 관측잡음의 분산행렬
      \item {\tt m0} : 상태변수 초기 평균벡터
      \item {\tt C0} : 상태변수 초기 분산행렬
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model + ARMA Model}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
gdp <- ts(gdp, frequency = 4, start = 1950)
Lgdp <- log(gdp)
level0 <- Lgdp[1]
slope0 <- mean(diff(Lgdp)) 
u <- c(-10.3060877, -18.9597189, -10.1841145, 1.4806264, -0.5468111)
trend <- dlmModPoly(dV=1e-7, dW=exp(u[1:2]), 
                    m0=c(level0, slope0), C0=2*diag(2)) 
gap <- dlmModARMA(ar=u[4:5], sigma2=exp(u[3])) 
dlmGap <- trend + gap
gdpSmooth <- dlmSmooth(Lgdp, dlmGap) 
plot(cbind(Lgdp, dropFirst(gdpSmooth$s[, 1])),
     xlab = "", ylab = "Log GDP", lty = c("longdash", "solid"), 
     col = c("darkgrey", "black"), plot.type = "single")
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Filtering}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Polynomial Model : Filtering}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
plot(dropFirst(gdpSmooth$s[, c(1,3)]), ann = F, yax.flip = TRUE)
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Regression Model}
  \begin{itemize}
    \item 외부 설명변수를 사용한 회귀분석 모형
    \begin{eqnarray*}
      y_t = \beta_1 + \beta_2 x_t + e_t
    \end{eqnarray*}
    \item {\tt dlmModReg(X, addInt, dV, dW, m0, C0)}
    \begin{itemize}
      \item {\tt X} : 설명변수 행렬
      \item {\tt addInt} : intercept 유무
      \item {\tt dW} : 이노베이션 분산
      \item {\tt dV} : 관측잡음의 분산행렬
      \item {\tt m0} : 상태변수 초기 평균벡터
      \item {\tt C0} : 상태변수 초기 분산행렬
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Regression Model}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
IBM <- capm.ts[, "IBM"] - capm.ts[, "RKFREE"] 
x <- capm.ts[, "MARKET"] - capm.ts[, "RKFREE"]
mod <- dlmModReg(x, 
                 dV=2.328397e-03, 
                 dW=c(1.100181e-05, 6.496259e-04)) 
outS <- dlmSmooth(IBM, mod)
s <- dropFirst(outS$s)
colnames(s) <- c("alpha", "beta")
plot(s, main="CAPM for IBM")
grid()
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Regression Model}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
plot(capm.ts)
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Regression Model}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Seasonality Model}
  \begin{itemize}
    \item 계절성 모형
    \item 주기 $s$인 모형의 경우 다음과 같은 $s-1$차 행렬을 이용하여 state rotation
    \begin{eqnarray*}
      F &=& 
      \begin{bmatrix}
       1 & 0 & \cdots & 0
      \end{bmatrix} \\
      G &=&
      \begin{bmatrix}
       -1 & -1 & \cdots & -1 & -1 \\
        1 &  0 &        &  0 &  0 \\
        0 &  1 &        &  0 &  0 \\
          &    & \vdots &  0 &  0 \\
        0 &  0 &        &  1 &  0 \\
      \end{bmatrix} 
    \end{eqnarray*}
    \item {\tt dlmModSeas(frequency, dV, dW, m0, C0)}
    \begin{itemize}
      \item {\tt frequency} : 주기
      \item {\tt dW} : 이노베이션 분산
      \item {\tt dV} : 관측잡음의 분산행렬
      \item {\tt m0} : 상태변수 초기 평균벡터
      \item {\tt C0} : 상태변수 초기 분산행렬
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Seasonality Model}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
data(UKgas)
lGas <- log(UKgas)
dlmGas <- dlmModPoly() + dlmModSeas(4)
diag(W(dlmGas))[2:3] <- c(7.901268e-6, 3.308592e-3)
V(dlmGas) <- 1.822496e-03
gasSmooth <- dlmSmooth(lGas, mod = dlmGas)
x <- cbind(lGas, dropFirst(gasSmooth$s[, c(1, 3)]))
colnames(x) <- c("Gas", "Trend", "Seasonal")
plot(x, type = "o", main = "UK Gas Consumption")
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Seasonality Model}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Seasonality Model}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
gasFilt <- dlmFilter(lGas, mod = dlmGas)
gasFore <- dlmForecast(gasFilt, nAhead = 20)
sqrtR <- sapply(gasFore$R, function(x) sqrt(x[1,1]))
pl <- gasFore$a[,1] + qnorm(0.05, sd = sqrtR)
pu <- gasFore$a[,1] + qnorm(0.95, sd = sqrtR)
x <- ts.union(window(lGas, start = c(1982, 1)),
window(gasSmooth$s[,1], start = c(1982, 1)),
gasFore$a[,1], pl, pu)
plot(x, plot.type = "single", type = 'o', pch = c(1, 0, 20, 3, 3),
     col = c("darkgrey", "darkgrey", "brown", "yellow", "yellow"),
     ylab = "Log gas consumption")
legend("bottomright", bty = 'n', pch = c(1, 0, 20, 3, 3), lty = 1,
       legend = c("Observed",
                  "Smoothed (deseasonalized)",
                  "Forecasted level", 
                  "90% probability limit"),
       col = c("darkgrey", "darkgrey", "brown", "yellow", "yellow"))
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{Seasonality Model}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{모형 계수의 추정}
  \begin{itemize}
    \item MLE(Maximum Likelihood Estimation) 사용
    \begin{eqnarray*}
      p(y_1, \ldots, y_n ; \psi) = \prod_{t=1}^n p (y_t | y_1, \ldots, y_{t-1} ; \psi)
    \end{eqnarray*}
    \item 칼만필터의 경우 log-likelihood는 Quadratic form
    \begin{eqnarray*}
      l(\psi) = -\dfrac{1}{2} \sum_{t=1}^n \log |Q_t| 
        - \dfrac{1}{2} \sum_{t=1}^n (y_t - f_t)^T Q_t^{-1} (y_t - f_t)
    \end{eqnarray*}
    \item {\tt dlmMLE(y, parm, build)}
    \begin{itemize}
      \item {\tt y} : 시계열 데이터
      \item {\tt parm} : 파라미터 초기값
      \item {\tt build} : 파라미터 값을 받아서 dlm 모형을 출력하는 함수
    \end{itemize}
  \end{itemize}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{모형 계수의 추정 예 1}
  \begin{tcolorbox}
<<fig,fig=FALSE,results=hide>>=
build <- function(parm) { 
  dlmModPoly(order=1, 
             dV=exp(parm[1]), 
             dW=exp(parm[2]))
  }
fit <- dlmMLE(lakeSup, rep(0, 2), build)
fit$convergence 
mod <- build(fit$par)
unlist(mod[c("V", "W")])
lakeSupFilt <- dlmFilter(lakeSup, mod)
plot(lakeSup, type='o', col= "darkgrey", xlab="")
lines(dropFirst(lakeSupFilt$m), lty="dotdash", col="red")
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{모형 계수의 추정 예 1}
  \begin{center}
<<echo=FALSE,results=hide,fig=TRUE,width=8,height=6>>=
<<fig>>
@
  \end{center}
\end{frame}
%===============================================================================

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[fragile]{모형 계수의 추정 예 2}
  \begin{tcolorbox}
<<fig,fig=FALSE>>=
level0 <- Lgdp[1]
slope0 <- mean(diff(Lgdp)) 
buildGap <- function(u) { 
  trend <- dlmModPoly(dV = 1e-7, dW = exp(u[1 : 2]), 
				     m0 = c(level0, slope0), 
	                             C0 = 2 * diag(2)) 
	gap <- dlmModARMA(ar = u[4 : 5], sigma2 = exp(u[3])) 
	return(trend + gap)
} 
init <- c(-3, -1, -3, .4, .4) 
outMLE <- dlmMLE(Lgdp, init, buildGap) 
dlmGap <- buildGap(outMLE$par) 
outMLE$par
@
  \end{tcolorbox}
\end{frame}
%===============================================================================

\end{document}


